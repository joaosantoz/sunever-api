---
openapi: 3.0.0
info:
  title: Sunever API
  description: Sunever API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local Development server
tags:
  - name: Recipes
    description: Recipes
  - name: Ingredients
    description: Ingredients
  - name: Measurements
    description: Measurements
paths:
  /measurements:
    get:
      tags:
        - Measurements
      summary: List all measurements
      description: List all measurements
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Measurement'
    post:
      tags:
        - Measurements
      summary: Create measurement
      description: Create measurement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Measurement'
        required: true
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Measurement'
  /measurements/{measurementId}:
    get:
      tags:
        - Measurements
      summary: Find one measurement
      description: Find one measurement
      parameters:
        - name: measurementId
          in: path
          description: Measurement Id
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            example: 2306dd9d-d497-43a0-94ef-d13ed07f7c74
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Measurement'
    put:
      tags:
        - Measurements
      summary: Update one measurement
      description: Update one measurement
      parameters:
        - name: measurementId
          in: path
          description: Measurement Id
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            example: 2306dd9d-d497-43a0-94ef-d13ed07f7c74
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Measurement'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Measurement'
    delete:
      tags:
        - Measurements
      summary: Delete one measurement
      description: Delete one measurement
      parameters:
        - name: measurementId
          in: path
          description: Measurement Id
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            example: 2306dd9d-d497-43a0-94ef-d13ed07f7c74
      responses:
        "204":
          description: No Content
  /ingredients:
    get:
      tags:
        - Ingredients
      summary: List all ingredients
      description: List all ingredients
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ingredient'
    post:
      tags:
        - Ingredients
      summary: Create ingredient
      description: Create ingredient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ingredient'
        required: true
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ingredient'
  /ingredients/{ingredientId}:
    get:
      tags:
        - Ingredients
      summary: Find one ingredient
      description: Find one ingredient
      parameters:
        - name: ingredientId
          in: path
          description: Ingredient Id
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            example: 2306dd9d-d497-43a0-94ef-d13ed07f7c74
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ingredient'
    put:
      tags:
        - Ingredients
      summary: Update one ingredient
      description: Update one ingredient
      parameters:
        - name: ingredientId
          in: path
          description: Ingredients Id
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            example: 2306dd9d-d497-43a0-94ef-d13ed07f7c74
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ingredient'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ingredient'
    delete:
      tags:
        - Ingredients
      summary: Delete one ingredient
      description: Delete one ingredient
      parameters:
        - name: ingredientId
          in: path
          description: Ingredients Id
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            example: 2306dd9d-d497-43a0-94ef-d13ed07f7c74
      responses:
        "204":
          description: No Content
  /recipes:
    get:
      tags:
        - Recipes
      summary: List all recipes
      description: List all recipes
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'
    post:
      tags:
        - Recipes
      summary: Create recipe
      description: Create recipe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipe'
        required: true
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'
  /recipes/{recipeId}:
    get:
      tags:
        - Recipes
      summary: Find one recipe
      description: Find one recipe
      parameters:
        - name: recipeId
          in: path
          description: Recipe Id
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            example: 2306dd9d-d497-43a0-94ef-d13ed07f7c74
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'
    put:
      tags:
        - Recipes
      summary: Update one recipe
      description: Update one recipe
      parameters:
        - name: recipeId
          in: path
          description: Recipes Id
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            example: 2306dd9d-d497-43a0-94ef-d13ed07f7c74
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipe'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'
    delete:
      tags:
        - Recipes
      summary: Delete one recipe
      description: Delete one recipe
      parameters:
        - name: recipeId
          in: path
          description: Recipes Id
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            example: 2306dd9d-d497-43a0-94ef-d13ed07f7c74
      responses:
        "204":
          description: No Content
  /recipes/calculate/{recipeId}:
    get:
      tags:
        - Recipes
      summary: Calculate selling preice of one recipe
      description: Calculate selling preice of one recipe
      parameters:
        - name: recipeId
          in: path
          description: Recipe Id
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            example: 2306dd9d-d497-43a0-94ef-d13ed07f7c74
        - name: profitPercentage
          in: query
          description: Desired profit percentage
          required: true
          style: form
          explode: true
          schema:
            minimum: 0.1
            type: number
            format: double
            example: 110
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeSellingPrice'
components:
  schemas:
    Measurement:
      required:
        - abbreviation
        - name
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: 2306dd9d-d497-43a0-94ef-d13ed07f7c74
        name:
          type: string
          example: Kilograms
        abbreviation:
          type: string
          example: kg
    Ingredient:
      required:
        - measurementId
        - name
        - price
        - quantityPerMeasure
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: 2306dd9d-d497-43a0-94ef-d13ed07f7c74
        name:
          type: string
          example: Sugar
        price:
          type: number
          format: double
          example: 23.47
        quantityPerMeasure:
          type: number
          example: 5
        measurement:
          $ref: '#/components/schemas/Measurement'
        measurementId:
          type: string
          format: uuid
          writeOnly: true
          example: b57980d1-f5b8-425c-b10a-aa5dad5dafd3
    Recipe:
      required:
        - description
        - ingredients
        - name
        - portions
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: 2306dd9d-d497-43a0-94ef-d13ed07f7c74
        name:
          type: string
          example: Carrot Cake
        description:
          type: string
          example: Carrot Cake description
        imageLink:
          type: string
          format: url
          example: https://fastly.picsum.photos/id/638/200/300.jpg
        portions:
          type: number
          example: 4
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/IngredientRecipe'
        recipeProductionCost:
          type: number
          format: double
          readOnly: true
          example: 18.6
        portionProductionCost:
          type: number
          format: double
          readOnly: true
          example: 4.65
    IngredientRecipe:
      required:
        - id
        - quantity
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 2306dd9d-d497-43a0-94ef-d13ed07f7c74
        quantity:
          type: number
          format: double
          example: 800
    RecipeSellingPrice:
      type: object
      properties:
        recipeSellingPrice:
          type: number
          format: double
          example: 43.34
        portionSellingPrice:
          type: number
          format: double
          example: 3.62